/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records


import java.time.LocalDateTime

import jooq.tables.Users

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UsersRecord() : UpdatableRecordImpl<UsersRecord>(Users.USERS) {

    open var createdDateTime: LocalDateTime?
        set(value): Unit = set(0, value)
        get(): LocalDateTime? = get(0) as LocalDateTime?

    open var updatedDateTime: LocalDateTime?
        set(value): Unit = set(1, value)
        get(): LocalDateTime? = get(1) as LocalDateTime?

    open var id: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var userId: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    /**
     * Create a detached, initialised UsersRecord
     */
    constructor(createdDateTime: LocalDateTime? = null, updatedDateTime: LocalDateTime? = null, id: String? = null, userId: String? = null): this() {
        this.createdDateTime = createdDateTime
        this.updatedDateTime = updatedDateTime
        this.id = id
        this.userId = userId
        resetChangedOnNotNull()
    }
}
